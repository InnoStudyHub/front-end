name: Build apk

on: [push, workflow_dispatch]
##on:
##  push:
##    branches:
##      - main

jobs:
  wait:
    name: Wait for checks
    runs-on: ubuntu-latest
    steps:
      - name: Wait for checks to succeed
        uses: fountainhead/action-wait-for-check@v1.1.0
        id: wait-for-check
        with:
          token: ${{ secrets.TOKEN }}
          checkName: Conclusion
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          intervalSeconds: 60
          timeoutSeconds: 1000

  build_apk:
    needs: wait
    if: success()
    name: Build apk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Get packages in a Flutter project
        run: flutter pub get
      - name: Clean
        run: flutter clean
      - name: Build APK
        run: flutter build apk --no-sound-null-safety

  build_web:
    needs: wait
    if: success()
    name: Build web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Get packages in a Flutter project
        run: flutter pub get
      - name: Clean
        run: flutter clean
      - name: Build web
        run: flutter build web --web-renderer html

  build_ios:
    needs: wait
    if: success()
    name: Build ios
    runs-on: macOS-12
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Get packages in a Flutter project
        run: flutter pub get
      - name: Clean
        run: flutter clean
      - name: Build ios
        run: flutter build ios --release --no-codesign
##      - uses: actions/upload-artifact@v1
##        with:
##          name: release-apk
##          path: build/app/outputs/apk/release/app-release.apk

  report:
    needs: [build_apk, build_ios, build_web]
    name: Send report
    runs-on: ubuntu-latest
    steps:
      - name: APK report success 
        if: needs.build_apk.result == 'success'
        env:
          APK_RESULT: 'APK built successfully'
        run: |
          echo "$APK_RESULT" >> $GITHUB_STEP_SUMMARY
      - name: APK report failure 
        if: needs.build_apk.result == 'failure'
        env:
          APK_RESULT: 'APK build failed'
        run: |
          echo "$APK_RESULT" >> $GITHUB_STEP_SUMMARY
      - name: Web report success
        if: needs.build_web.result == 'success'
        env:
          WEB_RESULT: 'Web built successfully'
        run: |
          echo "$WEB_RESULT" >> $GITHUB_STEP_SUMMARY
      - name: Web report failure
        if: needs.build_web.result == 'failure'
        env:
          WEB_RESULT: 'Web build failed'
        run: |
          echo "$WEB_RESULT" >> $GITHUB_STEP_SUMMARY
      - name: iOS report success
        if: needs.build_ios.result == 'success'
        env:
          IOS_RESULT: 'iOS built successfully'
        run: |
          echo "$IOS_RESULT" >> $GITHUB_STEP_SUMMARY
      - name: iOS report failure
        if: needs.build_ios.result == 'failure'
        env:
          IOS_RESULT: 'iOS build failed'
        run: |
          echo "$IOS_RESULT" >> $GITHUB_STEP_SUMMARY
      - name: Send telegram message on build failure
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Repository: ${{ github.repository }}
            Push to main branch

            ${{env.APK_RESULT}}
            ${{env.IOS_RESULT}}
            ${{env.WEB_RESULT}}
            
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}